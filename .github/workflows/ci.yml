name: CI

on: [push, pull_request]

jobs:
  build-ubuntu:
    strategy:
      matrix:
        platform: [ubuntu-latest, ubuntu-18.04]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get -qq update
        sudo apt-get install autoconf automake pkg-config libevent-dev libpcre3-dev libssl-dev
    - name: Build
      run: autoreconf -ivf && ./configure && make -j
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
        architecture: x64

    - name: Install Python dependencies
      run: pip install -r ./tests/test_requirements.txt

    - name: Cache Redis
      id: cache-redis
      uses: actions/cache@v1
      with:
        path: /home/runner/work/redis
        key: ${{ runner.os }}-redis

    - name: Check out Redis
      if: steps.cache-redis.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: 'redis/redis'
        ref: 'unstable'
        path: 'redis'

    - name: Build and run Redis
      if: steps.cache-redis.outputs.cache-hit != 'true'
      run: |
        cd redis
        make BUILD_TLS=yes -j
        ./src/redis-server --version

    - name: Generate TLS test certificates
      if: matrix.platform == 'ubuntu-latest'
      run: |
          ./tests/gen-test-certs.sh

    - name: Test OSS TCP
      timeout-minutes: 10
      run: |
        REDIS_SERVER=../redis/src/redis-server \
        ./tests/run_tests.sh

    - name: Test OSS TCP TLS
      if: matrix.platform == 'ubuntu-latest'
      timeout-minutes: 10
      run: |
        TLS=1 REDIS_SERVER=../redis/src/redis-server \
        ./tests/run_tests.sh

    - name: Test OSS-CLUSTER TCP
      timeout-minutes: 10
      run: |
        OSS_STANDALONE=0 OSS_CLUSTER=1 \
        REDIS_SERVER=../redis/src/redis-server \
        ./tests/run_tests.sh

    - name: Test OSS-CLUSTER TCP TLS
      timeout-minutes: 10
      if: matrix.platform == 'ubuntu-latest'
      run: |
        OSS_STANDALONE=0 OSS_CLUSTER=1 TLS=1 \
        REDIS_SERVER=../redis/src/redis-server \
        ./tests/run_tests.sh

  build-macos:
    strategy:
      matrix:
        platform: [macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: brew install autoconf automake libtool libevent pkg-config openssl@1.1
    - name: Build
      run: autoreconf -ivf && PKG_CONFIG_PATH=/usr/local/opt/openssl@1.1/lib/pkgconfig ./configure && make
